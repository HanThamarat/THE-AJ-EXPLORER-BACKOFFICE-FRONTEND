# Use an official Node.js runtime as a parent image
FROM node:18-alpine AS builder


ARG NEXT_PUBLIC_API_URL
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}

ARG NEXT_PUBLIC_AUTH_CALLBACK
ENV NEXT_PUBLIC_AUTH_CALLBACK=${NEXT_PUBLIC_AUTH_CALLBACK}

ARG NEXT_PUBLIC_WEB_SOCKET
ENV NEXT_PUBLIC_WEB_SOCKET=${NEXT_PUBLIC_WEB_SOCKET}

ARG NEXT_PUBLIC_GOOGLE_MAP_KEY
ENV NEXT_PUBLIC_GOOGLE_MAP_KEY=${NEXT_PUBLIC_GOOGLE_MAP_KEY}

# Set working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY package.json package-lock.json ./

# Install dependencies
RUN npm install --force

# Copy the rest of the application code
COPY .env.production .env.production
COPY . .

# Build the Next.js app
RUN npm run build

# Remove development dependencies (optional)
RUN npm prune --production

# Use a lightweight Node.js image for production
FROM node:18-alpine AS runner

# Set working directory
WORKDIR /app

# Copy built Next.js files from builder stage
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json

# Expose port 3002
EXPOSE 3002

# Start Next.js
CMD ["npm", "run", "start", "--", "-p", "3002"]